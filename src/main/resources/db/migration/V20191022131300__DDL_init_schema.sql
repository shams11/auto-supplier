CREATE
  TABLE
    ORG (
      ID UUID NOT NULL,
      CREATED_BY_USER VARCHAR(50),
      MODIFIED_BY_USER VARCHAR(50),
      TIME_CREATED TIMESTAMP NOT NULL,
      TIME_UPDATED TIMESTAMP NOT NULL,
      VERSION BIGINT,
      UNIQUE_NAME VARCHAR(255) NOT NULL,
      PRIMARY KEY (ID)
);

CREATE
  TABLE
    PERMISSION (
      ID UUID NOT NULL,
      CREATED_BY_USER VARCHAR(50),
      MODIFIED_BY_USER VARCHAR(50),
      TIME_CREATED TIMESTAMP NOT NULL,
      TIME_UPDATED TIMESTAMP NOT NULL,
      VERSION BIGINT,
      DESCRIPTION VARCHAR(255),
      UNIQUE_NAME VARCHAR(255) NOT NULL,
      PRIMARY KEY (ID)
);

CREATE
  TABLE
    ROLE (
      ID UUID NOT NULL,
      CREATED_BY_USER VARCHAR(50),
      MODIFIED_BY_USER VARCHAR(50),
      TIME_CREATED TIMESTAMP NOT NULL,
      TIME_UPDATED TIMESTAMP NOT NULL,
      VERSION BIGINT,
      DESCRIPTION VARCHAR(255),
      UNIQUE_NAME VARCHAR(255) NOT NULL,
      PRIMARY KEY (ID)
);

CREATE
  TABLE
    ROLE_PERMISSION (
      ROLE_ID UUID NOT NULL,
      PERMISSION_ID UUID NOT NULL,
      PRIMARY KEY(
        ROLE_ID,
        PERMISSION_ID
      )
    );


CREATE
    TABLE
        SA_USER (
      ID UUID NOT NULL,
      CREATED_BY_USER VARCHAR(50),
      MODIFIED_BY_USER VARCHAR(50),
      TIME_CREATED TIMESTAMP NOT NULL,
      TIME_UPDATED TIMESTAMP NOT NULL,
      VERSION BIGINT,
      USERNAME VARCHAR(50),
      EMAIL VARCHAR(50),
	  FIRST_NAME VARCHAR(50),
	  LAST_NAME VARCHAR(50),
	  PASSWORD VARCHAR(255),
	  ORG_ID UUID NOT NULL,
	  ACTIVE INTEGER,
	  PRIMARY KEY (ID)
);

CREATE
  TABLE
    USER_ROLE(
      USER_ID UUID NOT NULL,
      ROLE_ID UUID NOT NULL,
      PRIMARY KEY(
        USER_ID,
        ROLE_ID
      )
    );

CREATE
    TABLE
        RESET_PASSWORD (
      ID UUID NOT NULL,
      CREATED_BY_USER VARCHAR(50),
      MODIFIED_BY_USER VARCHAR(50),
      TIME_CREATED TIMESTAMP NOT NULL,
      TIME_UPDATED TIMESTAMP NOT NULL,
      VERSION BIGINT,
      RESET_TOKEN VARCHAR(255),
      EMAIL VARCHAR(50),
	  PRIMARY KEY (ID)
);

CREATE
  TABLE
    BRAND (
      ID UUID NOT NULL,
      CREATED_BY_USER VARCHAR(50),
      MODIFIED_BY_USER VARCHAR(50),
      TIME_CREATED TIMESTAMP NOT NULL,
      TIME_UPDATED TIMESTAMP NOT NULL,
      VERSION BIGINT,
      UNIQUE_NAME VARCHAR(255) NOT NULL,
      ORG_ID UUID NOT NULL,
      LOGO_FILE_NAME VARCHAR(255) NOT NULL,
      LOGO BYTEA NOT NULL,
      PRIMARY KEY (ID)
);

CREATE
  TABLE
    MODEL (
      ID UUID NOT NULL,
      CREATED_BY_USER VARCHAR(50),
      MODIFIED_BY_USER VARCHAR(50),
      TIME_CREATED TIMESTAMP NOT NULL,
      TIME_UPDATED TIMESTAMP NOT NULL,
      VERSION BIGINT,
      DESCRIPTION VARCHAR(255),
      UNIQUE_NAME VARCHAR(255) NOT NULL,
      LOGO_FILE_NAME VARCHAR(255) NOT NULL,
      LOGO BYTEA NOT NULL,
      BRAND_ID UUID NOT NULL,
      PRIMARY KEY (ID)
);

CREATE
  TABLE
    VARIANT (
      ID UUID NOT NULL,
      CREATED_BY_USER VARCHAR(50),
      MODIFIED_BY_USER VARCHAR(50),
      TIME_CREATED TIMESTAMP NOT NULL,
      TIME_UPDATED TIMESTAMP NOT NULL,
      VERSION BIGINT,
      DESCRIPTION VARCHAR(255),
      UNIQUE_NAME VARCHAR(255) NOT NULL,
      CODE VARCHAR(50) NOT NULL,
      MODEL_ID UUID NOT NULL,
      PRIMARY KEY (ID)
);

CREATE
  TABLE
    PART (
      ID UUID NOT NULL,
      CREATED_BY_USER VARCHAR(50),
      MODIFIED_BY_USER VARCHAR(50),
      TIME_CREATED TIMESTAMP NOT NULL,
      TIME_UPDATED TIMESTAMP NOT NULL,
      VERSION BIGINT,
      UNIQUE_NAME VARCHAR(255) NOT NULL,
      DESCRIPTION VARCHAR(255),
      CODE VARCHAR(50) NOT NULL,
      VARIANT_ID UUID NOT NULL,
      PRIMARY KEY (ID)
);

CREATE
  TABLE
    PRODUCTION_RECORD (
      ID UUID NOT NULL,
      CREATED_BY_USER VARCHAR(50),
      MODIFIED_BY_USER VARCHAR(50),
      TIME_CREATED TIMESTAMP NOT NULL,
      TIME_UPDATED TIMESTAMP NOT NULL,
      VERSION BIGINT,
      PART_ID UUID NOT NULL,
      VARIANT_ID UUID NOT NULL,
      COMPANY_NAME VARCHAR(255) NOT NULL,
      USER_CODE VARCHAR(255) NOT NULL,
      PRIMARY KEY (ID)
);

CREATE INDEX IDX_ORG_NAME ON ORG (UNIQUE_NAME);

CREATE INDEX IDX_VARIANT_ID_PART_ID ON PRODUCTION_RECORD (PART_ID, VARIANT_ID);

CREATE INDEX IDX_USER_USERNAME ON SA_USER (USERNAME);
CREATE INDEX IDX_USER_EMAIL ON SA_USER (EMAIL);

ALTER TABLE SA_USER
ADD CONSTRAINT UK_USER_USERNAME UNIQUE (USERNAME);

ALTER TABLE SA_USER
ADD CONSTRAINT UK_USER_EMAIL UNIQUE (EMAIL);


ALTER TABLE
  SA_USER ADD CONSTRAINT UK_EMAIL_ORG_ID UNIQUE(
    ORG_ID,
    EMAIL
  );

ALTER TABLE
  SA_USER ADD CONSTRAINT UK_USERNAME_ORG_ID UNIQUE(
    ORG_ID,
    USERNAME
  );

ALTER TABLE
  ROLE ADD CONSTRAINT UK_ROLE_UNIQUE_NAME UNIQUE(UNIQUE_NAME);

ALTER TABLE
  PERMISSION ADD CONSTRAINT UK_PERMISSION_UNIQUE_NAME UNIQUE(UNIQUE_NAME);

ALTER TABLE
  ROLE_PERMISSION ADD CONSTRAINT FKA6JX8N8XKESMJMV6JQUG6BG68 FOREIGN KEY(ROLE_ID) REFERENCES ROLE;

ALTER TABLE
  ROLE_PERMISSION ADD CONSTRAINT FKF8YLLW1ECVWQY3EHYXAWQA1QP FOREIGN KEY(PERMISSION_ID) REFERENCES PERMISSION;

ALTER TABLE
  USER_ROLE ADD CONSTRAINT FKA68196081FVOVJHKEK5M97N3Y FOREIGN KEY(ROLE_ID) REFERENCES ROLE;

ALTER TABLE
  USER_ROLE ADD CONSTRAINT FK859N2JVI8IVHUI0RL0ESWS6O FOREIGN KEY(USER_ID) REFERENCES SA_USER;

  ALTER TABLE
  BRAND ADD CONSTRAINT UK_UNIQUE_NAME_ORG_ID UNIQUE(
    ORG_ID,
    UNIQUE_NAME
  );

  CREATE INDEX IDX_BRAND_ORG_ID ON BRAND (ORG_ID, UNIQUE_NAME);

ALTER TABLE
  MODEL ADD CONSTRAINT UK_MODEL_NAME UNIQUE(UNIQUE_NAME);

ALTER TABLE
  MODEL ADD CONSTRAINT FKSAMN7SL4521NNSV9EIXIG75ET FOREIGN KEY(BRAND_ID) REFERENCES BRAND;

CREATE INDEX IDX_PART_NAME ON PART(UNIQUE_NAME);
CREATE INDEX IDX_PART_CODE ON PART(CODE);

ALTER TABLE PART
    ADD CONSTRAINT UK_PART_NAME UNIQUE (UNIQUE_NAME);

ALTER TABLE PART
    ADD CONSTRAINT UK_PART_CODE UNIQUE (CODE);

ALTER TABLE
  PART ADD CONSTRAINT FK9PEIG4UQX28XCQ0GY893PX0F9 FOREIGN KEY(VARIANT_ID) REFERENCES VARIANT;

CREATE INDEX IDX_VARIANT_NAME ON VARIANT(UNIQUE_NAME);
CREATE INDEX IDX_VARIANT_CODE ON VARIANT(CODE);

ALTER TABLE VARIANT
    ADD CONSTRAINT UK_VARIANT_NAME UNIQUE (UNIQUE_NAME);

ALTER TABLE VARIANT
    ADD CONSTRAINT UK_VARIANT_CODE UNIQUE (CODE);

ALTER TABLE
  VARIANT ADD CONSTRAINT FK9QK97P87G4MN2FREWPIQMGGDL FOREIGN KEY(MODEL_ID) REFERENCES MODEL;

